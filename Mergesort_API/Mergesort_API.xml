<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mergesort_API</name>
    </assembly>
    <members>
        <member name="M:Mergesort_API.Controllers.MergesortController.SortArray(System.Int32[])">
            <summary>
            Mergesort sorting an array.
            </summary>
            <param name="numbers">The array of integers to sort.</param>
            <response code="201">Sorting execution accepted.</response>
            <returns>A <see cref="T:Mergesort_API.Job"/> representing the work to being done.</returns>
        </member>
        <member name="M:Mergesort_API.Controllers.MergesortController.GetExecutionsById(System.Int32)">
            <summary>
            Gets the executions by identifier.
            </summary>
            <param name="id">The identifier of the job to retrieve.</param>
            <response code="200">Execution found.</response>
            <response code="404">Execution not found.</response>
            <returns>A <see cref="T:Mergesort_API.SortingJob"/> representing the work being done.</returns>
        </member>
        <member name="M:Mergesort_API.Controllers.MergesortController.GetExecutions">
            <summary>
            Gets all executions.
            </summary>
            <response code="200">Executions found.</response>
            <response code="404">No executions found.</response>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> A list of all jobs that have run and are running.</returns>
        </member>
        <member name="T:Mergesort_API.IJobRunner">
            <summary>
            The jobrunner interface.
            </summary>
        </member>
        <member name="M:Mergesort_API.IJobRunner.Execute(Mergesort_API.SortingJob,System.Threading.CancellationToken)">
            <summary>
            Executes the specified job.
            </summary>
            <param name="job">The job.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:Mergesort_API.Job">
            <summary>
            A job.
            </summary>
        </member>
        <member name="M:Mergesort_API.Job.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mergesort_API.Job"/> class.
            </summary>
        </member>
        <member name="P:Mergesort_API.Job.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The job identifier.
            </value>
        </member>
        <member name="P:Mergesort_API.Job.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:Mergesort_API.Job.Status">
            <summary>
            Gets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="M:Mergesort_API.Job.Work">
            <summary>
            The work that has to be done as part of the execution.
            </summary>
        </member>
        <member name="M:Mergesort_API.Job.Run">
            <summary>
            run this instance.
            </summary>
        </member>
        <member name="T:Mergesort_API.Status">
            <summary>
            Execution Status.
            </summary>
        </member>
        <member name="F:Mergesort_API.Status.Pending">
            <summary>
            The pending status.
            </summary>
        </member>
        <member name="F:Mergesort_API.Status.Completed">
            <summary>
            The completed status.
            </summary>
        </member>
        <member name="T:Mergesort_API.ISorter`1">
            <summary>
            The Sorter interface.
            </summary>
            <typeparam name="T">The type that is sorted by the sorter.</typeparam>
        </member>
        <member name="M:Mergesort_API.ISorter`1.Sort(`0[])">
            <summary>
            Sorts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A sorted array of T.</returns>
        </member>
        <member name="T:Mergesort_API.MergeSorter">
            <summary>
            A MergeSorter.
            </summary>
            <seealso cref="!:Mergesort_API.ISorter&lt;int&gt;" />
        </member>
        <member name="M:Mergesort_API.MergeSorter.Sort(System.Int32[])">
            <summary>
            Sorts the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A sorted integer array.</returns>
            <exception cref="T:System.ArgumentNullException">input - Cannot be null</exception>
        </member>
        <member name="M:Mergesort_API.MergeSorter.Merge(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Merges the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="left">The left.</param>
            <param name="middle">The middle.</param>
            <param name="right">The right.</param>
        </member>
        <member name="M:Mergesort_API.MergeSorter.MergeSort(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Merges the sort.
            </summary>
            <param name="input">The input.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
        </member>
        <member name="T:Mergesort_API.SortingJob">
            <summary>
            A sorting job.
            </summary>
            <seealso cref="T:Mergesort_API.Job" />
        </member>
        <member name="F:Mergesort_API.SortingJob.sorter">
            <summary>
            The sorter to be used for sorting.
            </summary>
        </member>
        <member name="M:Mergesort_API.SortingJob.#ctor(Mergesort_API.ISorter{System.Int32},System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mergesort_API.SortingJob"/> class.
            </summary>
            <param name="sorter">The sorter.</param>
            <param name="input">The input.</param>
        </member>
        <member name="M:Mergesort_API.SortingJob.Work">
            <summary>
            Work that is to be done as part of the job execution.
            </summary>
        </member>
        <member name="P:Mergesort_API.SortingJob.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
            <value>
            The duration.
            </value>
        </member>
        <member name="P:Mergesort_API.SortingJob.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Mergesort_API.SortingJob.Output">
            <summary>
            Gets or sets the output.
            </summary>
            <value>
            The output.
            </value>
        </member>
        <member name="T:Mergesort_API.SortingJobRunner">
            <summary>
            The Sorting Job Runner
            </summary>
            <seealso cref="T:Mergesort_API.IJobRunner" />
        </member>
        <member name="M:Mergesort_API.SortingJobRunner.Execute(Mergesort_API.SortingJob,System.Threading.CancellationToken)">
            <summary>
            Executes the specified job.
            </summary>
            <param name="job">The job.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A Task.</returns>
        </member>
        <member name="T:Mergesort_API.InMemoryJobStore">
            <summary>
            The In memory job store.
            </summary>
            <seealso cref="!:Mergesort_API.IStorageProvider&lt;int, Mergesort_API.SortingJob&gt;" />
        </member>
        <member name="F:Mergesort_API.InMemoryJobStore.Jobs">
            <summary>
            The memory storage.
            </summary>
        </member>
        <member name="M:Mergesort_API.InMemoryJobStore.#ctor(Microsoft.Extensions.Logging.ILogger{Mergesort_API.InMemoryJobStore})">
            <summary>
            Initializes a new instance of the <see cref="T:Mergesort_API.InMemoryJobStore"/> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Mergesort_API.InMemoryJobStore.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns>A List of <see cref="T:Mergesort_API.SortingJob"/></returns>
        </member>
        <member name="M:Mergesort_API.InMemoryJobStore.GetById(System.Int32)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>A <see cref="T:Mergesort_API.SortingJob"/></returns>
        </member>
        <member name="M:Mergesort_API.InMemoryJobStore.Save(System.Int32,Mergesort_API.SortingJob)">
            <summary>
            Saves the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns>A Task.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">key - Key must be greater than or equal to 1.</exception>
            <exception cref="T:System.ArgumentNullException">item - Job cannot be null.</exception>
            <exception cref="T:System.ArgumentException">Key already exists.</exception>
        </member>
        <member name="T:Mergesort_API.IStorageProvider`2">
            <summary>
            The storageprovider interface
            </summary>
            <typeparam name="K"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Mergesort_API.IStorageProvider`2.Save(`0,`1)">
            <summary>
            Saves the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <returns>A Task.</returns>
        </member>
        <member name="M:Mergesort_API.IStorageProvider`2.GetById(`0)">
            <summary>
            Gets the by identifier.
            </summary>
            <param name="Id">The identifier.</param>
            <returns>A <see cref="!:&lt;T&gt;"/>.</returns>
        </member>
        <member name="M:Mergesort_API.IStorageProvider`2.GetAll">
            <summary>
            Gets all.
            </summary>
            <returns>A List of <see cref="!:&lt;T&gt;"/></returns>
        </member>
        <member name="T:Mergesort_API.Swagger.LowercaseDocumentFilter">
            <summary>
            A swagger documentfilter for lowercasing paths.
            </summary>
            <seealso cref="T:Swashbuckle.AspNetCore.SwaggerGen.IDocumentFilter" />
        </member>
        <member name="M:Mergesort_API.Swagger.LowercaseDocumentFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Applies the specified swagger document.
            </summary>
            <param name="swaggerDoc">The swagger document.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mergesort_API.Swagger.LowercaseDocumentFilter.LowercaseEverythingButParameters(System.String)">
            <summary>
            Lowercases the everything but parameters.
            </summary>
            <param name="key">The key.</param>
            <returns>A string.</returns>
        </member>
    </members>
</doc>
